<?xml version="1.0" encoding="ISO-8859-1"?>
<chapter id="quick_start" role="updated">
	<title>Quick Start with JBoss Server</title>

	<para>This chapter covers the basics of working with the <property>JBoss Server</property>.</para>

	<section id="JBoss_server_key_features">
		<title>Key Features of JBoss Server</title>
		<para>The table below lists the main features included in JBoss Server:</para>

		<table>
    	
			<title>Key Functionality for JBoss Server Adapter and Archive Tools</title>
			<tgroup cols="3">

				<colspec colnum="1" align="left" colwidth="2*"/>
				<colspec colnum="2" colwidth="4*"/>
				<colspec colnum="3" align="left" colwidth="2*"/>

				<thead>
					<row>
						<entry>Feature</entry>
						<entry>Benefit</entry>
						<entry>Chapter</entry>
					</row>
				</thead>
				<tbody>
					<row>
						<entry>
							<para>Runtimes and Servers</para>
						</entry>
						<entry>
							<para>An in-depth look at the different ways to import and configure a JBoss installation to be used, along with the options available to you at creation time.
							</para>
						</entry>
						<entry>
							<link linkend="runtimes_servers">Runtimes and servers</link>
						</entry>
					</row>

					<row>
						<entry>
							<para>Views and Editors</para>
						</entry>
						<entry>
							<para> This section will discuss the various views and editors that are accessible and related to JBoss AS Tools. This includes the primary view (Servers View), the server editor, and several integration views such as the MBean Explorer, the Console, and others. 
							</para>
						</entry>
						<entry>
							<link linkend="perspective">Views and Editors</link>
						</entry>
					</row>

					<row>
						<entry>
							<para>Modules Deployment</para>
						</entry>
						<entry>
							<para>A look into several ways to deploy a project, file, folder, or other type of module to a JBossTools server adapter.</para>
						</entry>
						<entry>
							<link linkend="modules">Deploying modules</link>
						</entry>
					</row>

			<!--		<row>
						<entry>
							<para>TPTP Support</para>
						</entry>
						<entry>
							<para>Test and Performance Tools Platform (TPTP) profiling.</para>
						</entry>
						<entry>
							<link linkend="tptp_support">TPTP support</link>
						</entry>
					</row> -->

				</tbody>

			</tgroup>
		</table>
  	
		<para>
			If you already have imported or created a JBoss server and runtime, this chapter will show you the basics of how to start, stop, and publish to the server. Installing and customizing runtimes and servers will be covered covered in more detail in <xref linkend="runtimes_servers"/>.
		</para>
  	
		<para>
			To start working with JBoss AS, you'll want to open the standard <guilabel>Servers View</guilabel> provided by <productname>WTP</productname>. Start by selecting the menu <menuchoice><guimenuitem>Window</guimenuitem><guimenuitem>Show View</guimenuitem><guimenuitem>Other</guimenuitem><guimenuitem>Server</guimenuitem><guimenuitem>Servers</guimenuitem></menuchoice>.
		</para>
	</section>

	<section id="starting">
		<title>Starting JBoss Server</title>

		<para>
			Starting <productname>JBoss Server</productname> is fairly straightforward. You can control the server state with the help of a special toolbar in the <guilabel>Servers</guilabel> view. This toolbar provides one-click access to controlling the server's state, and allows you to  <guibutton>start</guibutton> the server in either regular or debug mode. You can also <guibutton>stop</guibutton> or <guibutton>restart</guibutton> the server, as well as <guibutton>publish</guibutton> to it.
		</para>

		<figure>
			<title>Servers Toolbar</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/quick_start/quick_start_1.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>
			The first step to starting your server is to ensure your Servers View is opened. To open it, select <menuchoice><guimenuitem>Window</guimenuitem><guimenuitem>Show View</guimenuitem><guimenuitem>Other</guimenuitem><guimenuitem>Server</guimenuitem><guimenuitem>Servers</guimenuitem></menuchoice>.
		</para>
		<para>
			To launch the server click the start icon, consisting of a green circle with a white arrow inside, on the <guilabel>Servers</guilabel> view, or right click on the server name in the main section of the view and select <guimenuitem>Start</guimenuitem>. To start it in debug mode, you can select the <guimenuitem>Debug</guimenuitem> menu item, or click the debugging icon in the view's toolbar.
		</para>

		<figure>
			<title>Start JBoss Server</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/quick_start/quick_start_2.png"/>
				</imageobject>
			</mediaobject>
		</figure>

	</section>

	<section id="stopping">
		<title>Stopping JBoss Server</title>

		<para>
			To stop the server, click the <guibutton>Stop</guibutton> icon in the <guilabel>Servers</guilabel> view, or right click the server name and select the <guimenuitem>Stop</guimenuitem> option.
		</para>

		<figure>
			<title>Stop JBoss Server</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/quick_start/quick_start_3.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>When the server is stopped you will see <guilabel>[Stopped]</guilabel> next to the server's name in the Servers View. This decorator will inform you as to the server's running state, as well as it's publish state, throughout your development session. On a workspace restart, however, the initial state is not shown. At this time, the state has not yet been initialized.</para>
		<para>Learn more about the <guilabel>Servers</guilabel> view in <xref linkend="JBossServerView"/>.</para>
	</section>


	<section id="deployment">
		<title>Deploying an Application to a Server</title>

		<para>There are two times to deploy your application:</para>
		<itemizedlist>
			<listitem>
				<para>While creating it</para>
			</listitem>
			<listitem>
				<para>After it already exists</para>
			</listitem>
		</itemizedlist>

		<para>
			When you create some types of <productname>JBoss Tools</productname> projects, such as Seam, JSF or Struts with the New Project or Import Project wizards, they will include the <guilabel>Target Runtime</guilabel> and <guilabel>Target Server</guilabel> sections. You can deploy the application through the appropriate configuration in these sections during project creation.
		</para>

		<figure>
			<title>Runtime and Server Sections in the New Project Wizard</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/quick_start/quick_start_4a.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<figure>
			<title>Runtime and Server Sections in the Import Project Wizard</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/quick_start/quick_start_4b.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>
			Other projects, such as those from <productname>WebTools</productname>, allow you to target your project to a runtime for classpath evaluation purposes, but do not automatically deploy your application to the matching server adapter. (Remember, not all runtimes have an associated server. Some may be used solely for classpath evaluation.) Projects that behave this way include the Dynamic Web project, EJB Project, Utility Project, Enterprise Application Project, and others. You can, however, deploy these existing applications to a server. To do so, first right-click the server you'd like to publish to in the <guilabel>Servers</guilabel> view. Then select <guimenuitem>Add and Remove Projects</guimenuitem> from the context menu.
		</para>

		<figure>
			<title>Add and Remove Projects From the Context Menu.</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/quick_start/quick_start_5.png"/>
				</imageobject>
			</mediaobject>
		</figure>

		<para>
			If this application or module is not currently assigned to the selected server, it will be in the left-hand column, which lists modules available to be deployed. Clicking on your target module, and then on the <guibutton>Add ></guibutton> button will move the selected module to the right-hand module list. When you click finish, the module is now targeted to be deployed on the server. It may not publish immediately, however. The auto-publisher is disabled unless the server is already in started mode. You may need to force a publish event on the server, as described above, or simply wait until later. When you start your server, the modules will also be published. 
		</para>

		<figure>
			<title>Modifying The Projects that are Configured on the Server</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/quick_start/quick_start_6.png"/>
				</imageobject>
			</mediaobject>
		</figure>
		<note>
			<para>
				It is now possible to deploy OSGI (Open Services Gateway initiative framework) projects to the JBoss Enterprise Application Platform 6 or JBoss Application Server 7.
			</para>
		</note>
	</section>
	
	<section id="publishing">
		<title>Publishing to JBoss Server</title>
		<para>The publishing of all the modules added to a Server is performed automatically when starting a Server.</para>
		<para>
			Automatically publishing changes made to the workspace is enabled by default, allowing the workspace to remain in sync with the publish folder. However this autopublisher is only enabled when the server is in started mode. If you need to control when to publish the changes, just disable the automatic publish in the Server Editor (see <xref linkend="server_editor"/>) and use the <guibutton>Publish to Server</guibutton> (<inlinemediaobject><imageobject><imagedata fileref="images/quick_start/publish_button.png"/></imageobject></inlinemediaobject>) button which will incrementally publish the workspace.
		</para>
		
		<para>
			This section has provided some basic information that will allow you to use the common features provided by the JBoss server. However, JBoss server includes a great deal more functionality, which will be discussed in subsequent chapters.
		</para>
	</section>
</chapter>
